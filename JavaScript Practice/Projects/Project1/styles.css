/* 
TODO 1: Basic Reset
Step-by-step:
1. Use the universal selector (*) to target all elements
2. Set margin and padding to 0 to remove browser defaults
3. Set box-sizing to border-box for better size calculations
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* 
TODO 2: Body Styles
Step-by-step:
1. Set min-height to 100vh to fill the entire viewport
2. Use flexbox (display: flex) for centering:
   - justify-content: center (horizontal centering)
   - align-items: center (vertical centering)
3. Create a diagonal gradient background:
   - Start color: #4a90e2 (blue)
   - End color: #87ceeb (light blue)
4. Set modern font stack for better cross-platform appearance
*/
body {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(to bottom right, #4a90e2, #87ceeb);
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
}

/* 
TODO 3: Calculator Container
Step-by-step:
1. Set fixed width to 320px for optimal size
2. Add 20px padding for internal spacing
3. Set border-radius to 20px for rounded corners
4. Use dark background (#1c1c1c) for classic calculator look
5. Add shadow with:
   - 0 10px 30px spread
   - 30% opacity black
*/
.container {
  width: 320px;
  padding: 20px;
  border-radius: 20px;
  background-color: #1c1c1c;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

/* 
TODO 4: Display Styles
Step-by-step:
1. Create display container:
   - Full width (100%)
   - 20px bottom margin
   - Dark gray background (#3b3b3b)
   - 10px border radius
2. Style the input element:
   - 80px height for visibility
   - 15px padding
   - Very dark background (#1e1e1e)
   - White text color
   - Right-aligned text
   - 2.5rem font size
   - Monospace font for numeric display
   - Add subtle text glow with text-shadow
*/
.display {
  width: 100%;
  margin-bottom: 20px;
  background-color: #3b3b3b;
  border-radius: 10px;
  overflow: hidden;
}

.display input {
  width: 100%;
  height: 80px;
  padding: 15px;
  background-color: #1e1e1e;
  border: none;
  color: #fff;
  text-align: right;
  font-size: 2.5rem;
  font-family: "Courier New", monospace;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}

/* 
TODO 5: Button Grid
Step-by-step:
1. Use CSS Grid with:
   - display: grid
   - 4 equal columns (repeat(4, 1fr))
   - 12px gap between buttons
*/
.buttons-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 12px;
}

/* 
TODO 6: Button Styles
Step-by-step:
1. Base button styles (.button):
   - 20px padding
   - 1.5rem font size
   - No border
   - 10px border radius
   - Bold font weight
   - Smooth 0.2s transition

2. Number buttons:
   - Dark gradient (333333 to 2b2b2b)
   - White text
   - 3D shadow effect with light/dark edges

3. Operator buttons:
   - Orange gradient (ff9500 to ff8000)
   - White text
   - Larger 1.8rem font size

4. Equals button:
   - Green gradient (4cd964 to 32b84d)
   - Span 2 columns
   - White text

5. Clear button:
   - Red gradient (ff3b30 to dc1c13)
   - White text

6. Add press animation:
   - Scale down to 95%
   - Inner shadow effect
*/
.button {
  padding: 20px;
  font-size: 1.5rem;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s ease;
}

/* Number buttons - subtle gray */
.number {
  background: linear-gradient(145deg, #333333, #2b2b2b);
  color: #ffffff;
  box-shadow: 3px 3px 6px #1a1a1a, -3px -3px 6px #464646;
}

/* Operator buttons - orange accent */
.operator {
  background: linear-gradient(145deg, #ff9500, #ff8000);
  color: white;
  font-size: 1.8rem;
}

/* Equals button - make it stand out */
.equals {
  background: linear-gradient(145deg, #4cd964, #32b84d);
  color: white;
  grid-column: span 2;
}

/* Clear button - warning red */
.clear {
  background: linear-gradient(145deg, #ff3b30, #dc1c13);
  color: white;
}

/* Button press effects */
.button:active {
  transform: scale(0.95);
  box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.3);
}

/* 
TODO 7: Responsive Design
Step-by-step:
1. Create media query for screens under 400px
2. Adjust container:
   - 95% width
   - 320px max-width
   - Reduce padding to 15px
3. Modify buttons:
   - Reduce padding to 15px
   - Smaller 1.3rem font size
4. Adjust display:
   - Reduce height to 60px
   - Smaller 2rem font size
*/
@media (max-width: 400px) {
  .container {
    width: 95%;
    max-width: 320px;
    padding: 15px;
  }

  .button {
    padding: 15px;
    font-size: 1.3rem;
  }

  .display input {
    height: 60px;
    font-size: 2rem;
  }
}

/*
BONUS Challenges:
1. Sound Effects: Add click sound using JavaScript's Audio API
2. Solar Panel: Create a strip above display with CSS gradients
3. Tilt Effect: Use CSS transform on container hover
4. Theme Toggle: Add CSS variables for color schemes
*/

/* 
To deploy the project you will need to navigate to the project folder and run the following command:
`python -m http.server 8000`
*/
